{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ash\\\\Desktop\\\\new_aur\\\\web-dashboard\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BACKEND_URL = 'http://192.168.100.216:5000';\nconst App = () => {\n  _s();\n  const [images, setImages] = useState([]);\n  const [isRunning, setIsRunning] = useState(false);\n  const [statusMessage, setStatusMessage] = useState('');\n  const startRobot = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/start`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        setIsRunning(true);\n        setStatusMessage('Robot started');\n      } else {\n        const data = await response.json();\n        setStatusMessage(`Failed to start the robot: ${data.message || 'Unknown error'}`);\n      }\n    } catch (error) {\n      setStatusMessage('Error starting the robot');\n    }\n  };\n  const stopRobot = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/stop`, {\n        method: 'POST'\n      });\n      if (response.ok) {\n        setIsRunning(false);\n        setStatusMessage('Robot stopped');\n      } else {\n        const data = await response.json();\n        setStatusMessage(`Failed to stop the robot: ${data.message || 'Unknown error'}`);\n      }\n    } catch (error) {\n      setStatusMessage('Error stopping the robot');\n    }\n  };\n  const fetchImages = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/images`);\n      if (response.ok) {\n        const data = await response.json();\n        setImages(data.images || []);\n      } else {\n        setStatusMessage('Failed to fetch images');\n      }\n    } catch (error) {\n      setStatusMessage('Error fetching images');\n    }\n  };\n  const fetchStatus = async () => {\n    try {\n      const response = await fetch(`${BACKEND_URL}/status`);\n      if (response.ok) {\n        const data = await response.json();\n        setIsRunning(data.motion_running);\n      }\n    } catch (error) {\n      // Ignore status fetch errors\n    }\n  };\n  useEffect(() => {\n    fetchImages();\n    fetchStatus();\n    const interval = setInterval(() => {\n      fetchImages();\n      fetchStatus();\n    }, 5000);\n    return () => clearInterval(interval);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      fontFamily: 'Arial, sans-serif',\n      backgroundColor: '#f0f8ff',\n      color: '#333'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        color: '#007acc'\n      },\n      children: \"Underwater Robot Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '10px',\n        minHeight: '24px'\n      },\n      children: statusMessage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: startRobot,\n        disabled: isRunning,\n        style: {\n          marginRight: '10px',\n          backgroundColor: isRunning ? '#a0a0a0' : '#28a745',\n          color: 'white',\n          border: 'none',\n          padding: '10px 20px',\n          cursor: isRunning ? 'not-allowed' : 'pointer',\n          borderRadius: '5px'\n        },\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: stopRobot,\n        disabled: !isRunning,\n        style: {\n          backgroundColor: !isRunning ? '#a0a0a0' : '#dc3545',\n          color: 'white',\n          border: 'none',\n          padding: '10px 20px',\n          cursor: !isRunning ? 'not-allowed' : 'pointer',\n          borderRadius: '5px'\n        },\n        children: \"Stop\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      style: {\n        color: '#007acc'\n      },\n      children: \"Captured Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        flexWrap: 'wrap'\n      },\n      children: [images.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No images available\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 33\n      }, this), images.map((imgUrl, index) => /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `${BACKEND_URL}/images/${imgUrl}`,\n        alt: `Captured ${index}`,\n        style: {\n          width: '200px',\n          height: '150px',\n          marginRight: '10px',\n          marginBottom: '10px',\n          objectFit: 'cover',\n          borderRadius: '5px',\n          border: '1px solid #ccc'\n        }\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchImages,\n      style: {\n        marginTop: '10px',\n        backgroundColor: '#007acc',\n        color: 'white',\n        border: 'none',\n        padding: '10px 20px',\n        cursor: 'pointer',\n        borderRadius: '5px'\n      },\n      children: \"Refresh Images\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"z6YiKMlXdtUOhYW+ZVYw773Tyaw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","BACKEND_URL","App","_s","images","setImages","isRunning","setIsRunning","statusMessage","setStatusMessage","startRobot","response","fetch","method","ok","data","json","message","error","stopRobot","fetchImages","fetchStatus","motion_running","interval","setInterval","clearInterval","style","padding","fontFamily","backgroundColor","color","children","fileName","_jsxFileName","lineNumber","columnNumber","marginBottom","minHeight","onClick","disabled","marginRight","border","cursor","borderRadius","display","flexWrap","length","map","imgUrl","index","src","alt","width","height","objectFit","marginTop","_c","$RefreshReg$"],"sources":["C:/Users/Ash/Desktop/new_aur/web-dashboard/src/App.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst BACKEND_URL = 'http://192.168.100.216:5000';\r\n\r\nconst App: React.FC = () => {\r\n  const [images, setImages] = useState<string[]>([]);\r\n  const [isRunning, setIsRunning] = useState(false);\r\n  const [statusMessage, setStatusMessage] = useState('');\r\n\r\n  const startRobot = async () => {\r\n    try {\r\n      const response = await fetch(`${BACKEND_URL}/start`, { method: 'POST' });\r\n      if (response.ok) {\r\n        setIsRunning(true);\r\n        setStatusMessage('Robot started');\r\n      } else {\r\n        const data = await response.json();\r\n        setStatusMessage(`Failed to start the robot: ${data.message || 'Unknown error'}`);\r\n      }\r\n    } catch (error) {\r\n      setStatusMessage('Error starting the robot');\r\n    }\r\n  };\r\n\r\n  const stopRobot = async () => {\r\n    try {\r\n      const response = await fetch(`${BACKEND_URL}/stop`, { method: 'POST' });\r\n      if (response.ok) {\r\n        setIsRunning(false);\r\n        setStatusMessage('Robot stopped');\r\n      } else {\r\n        const data = await response.json();\r\n        setStatusMessage(`Failed to stop the robot: ${data.message || 'Unknown error'}`);\r\n      }\r\n    } catch (error) {\r\n      setStatusMessage('Error stopping the robot');\r\n    }\r\n  };\r\n\r\n  const fetchImages = async () => {\r\n    try {\r\n      const response = await fetch(`${BACKEND_URL}/images`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setImages(data.images || []);\r\n      } else {\r\n        setStatusMessage('Failed to fetch images');\r\n      }\r\n    } catch (error) {\r\n      setStatusMessage('Error fetching images');\r\n    }\r\n  };\r\n\r\n  const fetchStatus = async () => {\r\n    try {\r\n      const response = await fetch(`${BACKEND_URL}/status`);\r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        setIsRunning(data.motion_running);\r\n      }\r\n    } catch (error) {\r\n      // Ignore status fetch errors\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchImages();\r\n    fetchStatus();\r\n    const interval = setInterval(() => {\r\n      fetchImages();\r\n      fetchStatus();\r\n    }, 5000);\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ padding: '20px', fontFamily: 'Arial, sans-serif', backgroundColor: '#f0f8ff', color: '#333' }}>\r\n      <h1 style={{ color: '#007acc' }}>Underwater Robot Dashboard</h1>\r\n      <div style={{ marginBottom: '10px', minHeight: '24px' }}>{statusMessage}</div>\r\n      <div style={{ marginBottom: '20px' }}>\r\n        <button\r\n          onClick={startRobot}\r\n          disabled={isRunning}\r\n          style={{\r\n            marginRight: '10px',\r\n            backgroundColor: isRunning ? '#a0a0a0' : '#28a745',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '10px 20px',\r\n            cursor: isRunning ? 'not-allowed' : 'pointer',\r\n            borderRadius: '5px',\r\n          }}\r\n        >\r\n          Start\r\n        </button>\r\n        <button\r\n          onClick={stopRobot}\r\n          disabled={!isRunning}\r\n          style={{\r\n            backgroundColor: !isRunning ? '#a0a0a0' : '#dc3545',\r\n            color: 'white',\r\n            border: 'none',\r\n            padding: '10px 20px',\r\n            cursor: !isRunning ? 'not-allowed' : 'pointer',\r\n            borderRadius: '5px',\r\n          }}\r\n        >\r\n          Stop\r\n        </button>\r\n      </div>\r\n      <h2 style={{ color: '#007acc' }}>Captured Images</h2>\r\n      <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n        {images.length === 0 && <p>No images available</p>}\r\n        {images.map((imgUrl, index) => (\r\n          <img\r\n            key={index}\r\n            src={`${BACKEND_URL}/images/${imgUrl}`}\r\n            alt={`Captured ${index}`}\r\n            style={{ width: '200px', height: '150px', marginRight: '10px', marginBottom: '10px', objectFit: 'cover', borderRadius: '5px', border: '1px solid #ccc' }}\r\n          />\r\n        ))}\r\n      </div>\r\n      <button\r\n        onClick={fetchImages}\r\n        style={{\r\n          marginTop: '10px',\r\n          backgroundColor: '#007acc',\r\n          color: 'white',\r\n          border: 'none',\r\n          padding: '10px 20px',\r\n          cursor: 'pointer',\r\n          borderRadius: '5px',\r\n        }}\r\n      >\r\n        Refresh Images\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}